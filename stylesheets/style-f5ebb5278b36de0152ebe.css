/* Color */
:root {
  --c-black: black;
  --c-white: white;
  --c-gray: lightgray;
  --c-light-gray: whitesmoke;
  --c-blue: steelblue;
  --c-light-blue: lightblue;
  --c-red: salmon;
  --c-light-red: lightsalmon;
  --c-yellow: palegoldenrod;
  --c-light-yellow: lightgoldenrodyellow;
}

/* Typography */
:root {
  --f-sz-base: 1.125;
  --f-sz-ratio: 1.2;
  --f-sz-minify: 0.5;

  --f-w-bold: 600;
  --f-w-bolder: 700;

  /* h4 */
  --h4-f-sz-max-u: var(--f-sz-base) * var(--f-sz-ratio);
  --h4-f-sz-min-u: max((var(--h4-f-sz-max-u) * var(--f-sz-minify)), var(--f-sz-base));

  --h4-f-sz-max: calc(var(--h4-f-sz-max-u) * 1rem);
  --h4-f-sz-min: calc(var(--h4-f-sz-min-u) * 1rem);

  --h4-f-sz-fluid: clamp(
    var(--h4-f-sz-min),
    (((var(--h4-f-sz-min-u) * 1vw) + 4vw) + 1rem),
    var(--h4-f-sz-max)
  );

  /* h3 */
  --h3-f-sz-max-u: var(--h4-f-sz-max-u) * var(--f-sz-ratio);
  --h3-f-sz-min-u: max((var(--h3-f-sz-max-u) * var(--f-sz-minify)), var(--f-sz-base));

  --h3-f-sz-max: calc(var(--h3-f-sz-max-u) * 1rem);
  --h3-f-sz-min: calc(var(--h3-f-sz-min-u) * 1rem);

  --h3-f-sz-fluid: clamp(
    var(--h3-f-sz-min),
    (((var(--h3-f-sz-min-u) * 1vw) + 4vw) + 1rem),
    var(--h3-f-sz-max)
  );

  /* h2 */
  --h2-f-sz-max-u: var(--h3-f-sz-max-u) * var(--f-sz-ratio);
  --h2-f-sz-min-u: max((var(--h2-f-sz-max-u) * var(--f-sz-minify)), var(--f-sz-base));

  --h2-f-sz-max: calc(var(--h2-f-sz-max-u) * 1rem);
  --h2-f-sz-min: calc(var(--h2-f-sz-min-u) * 1rem);

  --h2-f-sz-fluid: clamp(
    var(--h2-f-sz-min),
    (((var(--h2-f-sz-min-u) * 1vw) + 4vw) + 1rem),
    var(--h2-f-sz-max)
  );

  /* h1 */
  --h1-f-sz-max-u: var(--h2-f-sz-max-u) * var(--f-sz-ratio);
  --h1-f-sz-min-u: max((var(--h1-f-sz-max-u) * var(--f-sz-minify)), var(--f-sz-base));

  --h1-f-sz-max: calc(var(--h1-f-sz-max-u) * 1rem);
  --h1-f-sz-min: calc(var(--h1-f-sz-min-u) * 1rem);

  --h1-f-sz-fluid: clamp(
    var(--h1-f-sz-min),
    (((var(--h1-f-sz-min-u) * 1vw) + 4vw) + 1rem),
    var(--h1-f-sz-max)
  );
}

:is(h1, h2, h3, h4, h5, h6, p, li) {
  hyphens: auto;
  margin-top: 0;
  overflow-wrap: break-word;
}

:is(h1, h2, h3, h4, h5, h6) {
  line-height: calc(1em + 0.25rem);
  margin-bottom: 0.65em;
}

h1 {
  font-size: calc(var(--h1-f-sz-max) * 1rem);
  font-size: var(--h1-f-sz-fluid);
}

h2 {
  font-size: calc(var(--h2-f-sz-max) * 1rem);
  font-size: var(--h2-f-sz-fluid);
}

h3 {
  font-size: calc(var(--h3-f-sz-max) * 1rem);
  font-size: var(--h3-f-sz-fluid);
}

h4 {
  font-size: calc(var(--h4-f-sz-max) * 1rem);
  font-size: var(--h4-f-sz-fluid);
}

:is(body, h5, h6) {
  font-size: calc(var(--f-sz-base) * 1rem);
  line-height: 1.5;
}

:is(strong, b) {
  font-weight: var(--f-w-bolder);
}

/* Global */
body {
  margin: 0 auto;
  padding: calc(0.5rem + 2.5vw) 0;
  width: min(80ch, 100vw - 2rem);
}

header nav {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 2rem;
}

header nav ul {
  column-gap: min(2.5vw, 2rem);
  display: flex;
  flex-grow: 1;
  font-weight: var(--f-w-bold);
  justify-content: space-between;
  list-style: none;
  margin: 0;
  max-width: min(100%, 12rem);
  padding: 0;
}

/* Components::Address */
address {
  font-style: normal;
}

/* Components::Details */
details {
  margin-bottom: 1rem;
}

details summary {
  cursor: pointer;
}

details summary:is(:hover, :focus) {
  text-decoration: underline;
}

details summary::marker,
details summary::-webkit-details-marker {
  color: var(--c-gray);
}

details summary ~ * {
  border-left: 0.1rem dashed var(--c-gray);
  margin-left: 0.5ch;
  margin-top: 0.5rem;
  padding: 0 1.5ch;
}

/* Components::HorizontalRule */
hr {
  background: repeating-linear-gradient(to right, var(--c-black) 0 0.5rem, transparent 0.5rem 1rem);
  border: none;
  height: 0.125rem;
  margin: 2rem 0;
}

