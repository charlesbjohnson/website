<div data-tldr>
Led DevSecOps and fulfillment optimizations for a direct mail API startup.
</div>

<div data-screen>
Lob is a startup that had less than 20 employees when I joined; I was one of 4 engineers on the team.
The company offers a SAAS product in the form of RESTful APIs for sending physical mail and verifying addresses.
The Print & Mail API handled thousands of requests per day.

The engineering team was small and without defined roles so we self-assigned responsibilities based on interest and capability.
I had more experience with cloud infrastructure, so I took DevSecOps responsibilities.

One of the first projects I worked on was to setup auto-scaling for the Print & Mail API infrastructure.
This turned out to be a larger than expected task given that everything was manually managed through the AWS web interface.
My approach was to:

- Introduce Terraform to get a handle on critical infrastructure.
- Dockerize the application to automate provisioning.
- Setup a parallel set of infrastructure to use AWS ECS for scheduling containers.
- Cut-over from the old infrastructure to the new infrastructure.

The migration completed without any issues and we were able to leverage AWS features to manage auto-scaling with almost no custom code.
There were other benefits and improvements from this approach, including:

- Codified infrastructure with hardened security policies.
- Explicit, documented provisioning.
- Automated deployments with immediate rollbacks.

Aside from leading DevSecOps, I also became the lead for the _Partner Operations_ team.
The Partner Operations team was responsible for optimally routing requests on the backend to the Partners that fulfilled them.
Geographic proximity, capability, and available capacity were some of the factors considered when routing to a Partner.

My role on the Partner Operations team was to increase throughput and improve service reliability.
This involved:

- Handling and resolving routing failures as part of an on-call schedule.
- Identifying and reducing bottlenecks in the codebase, infrastructure, and manual procedures.
- Researching, designing, and prototyping a V2 of the backend architecture.

This was a difficult role since the on-call burden was high.
I was not able to deliver a V2 of the backend, but I exhausted most optimization opportunities of the existing code and infrastructure.
</div>
